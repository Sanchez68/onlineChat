{"version":3,"sources":["components/Navbar.js","components/utils/const.js","components/Login.js","components/common/Loader.js","components/Chat.js","routes.js","components/AppRouter.js","App.js","index.js","components/components.module.css"],"names":["Navbar","auth","useContext","Context","useAuthState","isLogin","AppBar","position","Toolbar","variant","Grid","container","justify","Button","onClick","signOut","to","Login","loginOnClick","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","console","log","className","s","loginWrapper","Loader","loaderWrapper","Chat","firestore","useState","inputValue","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","chatWrapper","chatWindow","map","message","messageWrapper","Avatar","src","TextField","fullWidth","maxRows","id","label","value","onChange","e","target","publicRoutes","path","Component","privateRoutes","AppRouter","component","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.501986b8.chunk.js","sourcesContent":["import React, {useContext} from 'react';\r\nimport {AppBar, Grid, Toolbar,} from \"@mui/material\";\r\nimport Button from '@mui/material/Button';\r\nimport {LOGIN_ROUTE} from \"./utils/const\";\r\nimport NavLink from \"react-router-dom/NavLink\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst Navbar = () => {\r\n    const {auth} = useContext(Context)\r\n    const [isLogin] = useAuthState(auth)\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar variant={\"dense\"}>\r\n                <Grid container justify={'flex-end'}>\r\n                </Grid>\r\n                { isLogin ?  <Button onClick={()=>{auth.signOut()}} variant=\"contained\">Logout</Button>\r\n                    :\r\n                    <NavLink to={LOGIN_ROUTE}>\r\n                        <Button variant=\"contained\">Login</Button>\r\n                    </NavLink>\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;","export const LOGIN_ROUTE = '/login'\r\nexport const CHAT_ROUTE = '/chat'\r\n\r\n\r\nexport const LOGIN_ROUTE_PATH = 'onlineChat/login'\r\nexport const CHAT_ROUTE_PATH = 'onlineChat/chat'\r\n\r\n\r\n","import React, {useContext} from 'react';\r\nimport Button from \"@mui/material/Button\";\r\nimport s from './components.module.css'\r\nimport {Context} from \"../index\";\r\nimport firebase from \"firebase/compat\";\r\nconst Login = () => {\r\n\r\n    const {auth} = useContext(Context)\r\n\r\n    const loginOnClick = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        const {user} = await auth.signInWithPopup(provider)\r\n        console.log(user)\r\n    }\r\n    return (\r\n        <div className={s.loginWrapper}>\r\n            <Button variant=\"outlined\" onClick={loginOnClick}>\r\n                Enter with Google\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport s from './../components.module.css'\r\nimport './../../App.css'\r\nconst Loader = () => {\r\n    return (\r\n        <div className={s.loaderWrapper}>\r\n            <div className=\"lds-hourglass\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, {useContext, useState} from 'react';\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport s from './components.module.css'\r\nimport {Avatar, TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"./common/Loader\";\r\nimport firebase from \"firebase/compat\";\r\n\r\nconst Chat = () => {\r\n\r\n    const {auth, firestore} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    const [inputValue, setValue] = useState(\"\")\r\n\r\n    const [messages, loading] =\r\n        useCollectionData(firestore.collection('messages').orderBy('createdAt'))\r\n\r\n\r\n    const sendMessage = async () => {\r\n        firestore.collection('messages').add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            text: inputValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setValue('')\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.chatWrapper}>\r\n            <div className={s.chatWindow}>\r\n                {messages.map(message =>\r\n                    <div key={message.uid} className={s.messageWrapper}>\r\n                        <div>\r\n                            <Avatar src={message.photoURL}/>\r\n                            <div>{message.displayName}</div>\r\n                        </div>\r\n                        <div>\r\n                            {message.text}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <TextField fullWidth\r\n                       maxRows={2}\r\n                       id=\"filled-basic\"\r\n                       label=\"Filled\" variant=\"filled\"\r\n                       value={inputValue}\r\n                       onChange={e => setValue(e.target.value)}\r\n            />\r\n            <Button onClick={sendMessage} variant=\"outlined\">Отправить</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./components/utils/const\";\r\nimport Login from \"./components/Login\";\r\nimport Chat from \"./components/Chat\";\r\n\r\nexport const publicRoutes =[\r\n    {\r\n        path: \"/login\",\r\n        Component: Login\r\n    }\r\n]\r\nexport const privateRoutes =[\r\n    {\r\n        path: \"/chat\",\r\n        Component: Chat\r\n    }\r\n]","import React, {useContext} from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {privateRoutes, publicRoutes} from \"../routes\";\r\nimport {CHAT_ROUTE, CHAT_ROUTE_PATH, LOGIN_ROUTE, LOGIN_ROUTE_PATH} from \"./utils/const\";\r\nimport Redirect from \"react-router-dom/Redirect\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Context} from \"../index\";\r\nimport Chat from \"./Chat\";\r\nimport Login from \"./Login\";\r\n\r\n\r\nconst AppRouter = () => {\r\n    const {auth} = useContext(Context)\r\n    const [isLogin] = useAuthState(auth)\r\n    return isLogin ?\r\n        (\r\n            <Switch>\r\n                {privateRoutes.map(({path, Component}) =>\r\n                    <Route path={path} component={Component} />\r\n                )}\r\n                <Chat/>\r\n                <Redirect to=\"/chat\"/>\r\n            </Switch>\r\n        )\r\n        :\r\n        (\r\n            <Switch>\r\n                {publicRoutes.map(({path, Component}) =>\r\n                    <Route path={path}  />\r\n                )}\r\n                <Login/>\r\n                <Redirect to=\"/login\" />\r\n            </Switch>\r\n        )\r\n};\r\n\r\nexport default AppRouter;","import React, {useContext} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport {Context} from \"./index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport Loader from \"./components/common/Loader\";\r\n\r\nconst App = () => {\r\n    const {auth} = useContext(Context)\r\n    const [isLogin,loading,error] = useAuthState(auth)\r\n\r\n    if (loading){\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Navbar/>\r\n            <AppRouter/>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import React, {createContext} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport firebase from \"firebase/compat\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\nfirebase.initializeApp({\r\n        apiKey: \"AIzaSyB1S8zZhOP8dBNM2Hph0RAVBpq040ooMm0\",\r\n        authDomain: \"chat-react-cedb2.firebaseapp.com\",\r\n        projectId: \"chat-react-cedb2\",\r\n        storageBucket: \"chat-react-cedb2.appspot.com\",\r\n        messagingSenderId: \"966615400212\",\r\n        appId: \"1:966615400212:web:565efb0db115ce87f2cc01\",\r\n        measurementId: \"${config.measurementId}\"\r\n    }\r\n)\r\nconst auth = firebase.auth()\r\nconst firestore = firebase.firestore()\r\n\r\nexport const Context = createContext(null)\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Context.Provider value={{\r\n            firebase,\r\n            auth,\r\n            firestore\r\n        }}>\r\n            <App/>\r\n        </Context.Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"components_loginWrapper__2WKxz\",\"loaderWrapper\":\"components_loaderWrapper__JEvcV\",\"chatWrapper\":\"components_chatWrapper__3VhGm\",\"chatWindow\":\"components_chatWindow__2X90Q\",\"messageWrapper\":\"components_messageWrapper__clqad\"};"],"sourceRoot":""}